import React, { useState } from 'react';
import { useAuth } from '../../contexts/AuthContext.js';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';
import jsPDF from 'jspdf';
import './Dashboard.css';

function CEODashboard() {
  const { user, logout } = useAuth();
  const [activeTab, setActiveTab] = useState('monthly');
  const [viewedReport, setViewedReport] = useState(null);

  const monthlyData = [
    { name: 'Jan', approved: 120, pending: 80 },
    { name: 'Feb', approved: 150, pending: 60 },
    { name: 'Mar', approved: 180, pending: 40 },
    { name: 'Apr', approved: 200, pending: 30 },
  ];

  const reports = [
    { id: 'TCR001', type: 'Tender Compliance', frequency: 'Monthly', date: '2025-06-27', status: 'Generated' },
    { id: 'RMR001', type: 'Risk Mitigation', frequency: 'Monthly', date: '2025-06-27', status: 'Generated' },
    { id: 'TCR002', type: 'Tender Compliance', frequency: 'Yearly', date: '2025-06-01', status: 'Generated' },
  ];

  const handleDownloadPDF = (report) => {
    const doc = new jsPDF();
    doc.setFontSize(16);
    doc.text('Report', 10, 15);
    doc.setFontSize(12);
    doc.text(`Report ID: ${report.id}`, 10, 25);
    doc.text(`Type: ${report.type}`, 10, 32);
    doc.text(`Frequency: ${report.frequency || '-'}`, 10, 39);
    doc.text(`Date: ${report.date}`, 10, 46);
    doc.text(`Status: ${report.status}`, 10, 53);
    doc.save(`${report.id}.pdf`);
  };

  return (
    <div className="dashboard-container">
      <header className="dashboard-header">
        <div className="header-content">
          <h1>Fruntrunner International</h1>
          <div className="user-info">
            <span>Welcome, {user.fullName} (CEO)</span>
            <button onClick={logout} className="logout-btn">Logout</button>
          </div>
        </div>
      </header>

      <div className="dashboard-content">
        <div className="dashboard-stats">
          <div className="stat-item">
            <div className="stat-title">Total Reports</div>
            <div className="stat-number">Reports</div>
          </div>
        </div>

        <div className="dashboard-tabs">
          <button 
            className={activeTab === 'monthly' ? 'active' : ''}
            onClick={() => setActiveTab('monthly')}
          >
            Monthly Report
          </button>
          <button 
            className={activeTab === 'yearly' ? 'active' : ''}
            onClick={() => setActiveTab('yearly')}
          >
            Yearly Report
          </button>
        </div>

        <div className="charts-section">
          <div className="chart-container">
            <h3>{activeTab === 'monthly' ? 'Monthly' : 'Yearly'} Performance</h3>
            <ResponsiveContainer width="100%" height={300}>
              <BarChart data={monthlyData}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="name" />
                <YAxis />
                <Tooltip />
                <Bar dataKey="approved" fill="#4CAF50" />
                <Bar dataKey="pending" fill="#FF9800" />
              </BarChart>
            </ResponsiveContainer>
          </div>
        </div>

        <div className="reports-section">
          <h3>Recent Reports</h3>
          <div className="reports-grid">
            <div className="report-category">
              <h4>Tender Compliance Reports</h4>
              <div className="report-filters">
                <input type="text" placeholder="Search" />
                <select>
                  <option>File Type</option>
                  <option>PDF</option>
                  <option>Excel</option>
                </select>
                <select>
                  <option>Generated By</option>
                  <option>System</option>
                  <option>Manual</option>
                </select>
              </div>
              <table className="reports-table">
                <thead>
                  <tr>
                    <th>Report ID</th>
                    <th>Type</th>
                    <th>Date</th>
                    <th>Status</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  {reports.filter(r => r.type === 'Tender Compliance').map(report => (
                    <tr key={report.id}>
                      <td>{report.id}</td>
                      <td>{report.type}</td>
                      <td>{report.date}</td>
                      <td>{report.status}</td>
                      <td>
                        <button className="action-btn" onClick={() => setViewedReport(report)}>View</button>
                        <button className="action-btn" onClick={() => handleDownloadPDF(report)}>Download</button>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>

            <div className="report-category">
              <h4>Risk Mitigation Reports</h4>
              <div className="report-filters">
                <input type="text" placeholder="Search" />
                <select>
                  <option>File Type</option>
                </select>
                <select>
                  <option>Generated By</option>
                </select>
              </div>
              <table className="reports-table">
                <thead>
                  <tr>
                    <th>Report ID</th>
                    <th>Type</th>
                    <th>Date</th>
                    <th>Status</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  {reports.filter(r => r.type === 'Risk Mitigation').map(report => (
                    <tr key={report.id}>
                      <td>{report.id}</td>
                      <td>{report.type}</td>
                      <td>{report.date}</td>
                      <td>{report.status}</td>
                      <td>
                        <button className="action-btn" onClick={() => setViewedReport(report)}>View</button>
                        <button className="action-btn" onClick={() => handleDownloadPDF(report)}>Download</button>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
          {viewedReport && (
            <div className="generated-report" style={{marginTop: 32, background: '#f7fafc', borderRadius: 8, padding: 24, boxShadow: '0 2px 8px rgba(102,126,234,0.08)'}}>
              <h4>Report Details</h4>
              <p><strong>Report ID:</strong> {viewedReport.id}</p>
              <p><strong>Type:</strong> {viewedReport.type}</p>
              <p><strong>Frequency:</strong> {viewedReport.frequency}</p>
              <p><strong>Date:</strong> {viewedReport.date}</p>
              <p><strong>Status:</strong> {viewedReport.status}</p>
              <button className="action-btn" onClick={() => setViewedReport(null)} style={{marginTop: 16}}>Close</button>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}

export default CEODashboard;
